 import student.TestCase;



 // -------------------------------------------------------------------------

 /**

  * Tests for the {@link Node} class.
  * @version 2013.10.04
  */

 public class NodeTest

     extends TestCase

 {

   // ~ Fields ................................................................



   private Node<String> node1;

   private Node<String> node2;

   private Node<String> node3;





   // ~ Public methods ........................................................



   // ----------------------------------------------------------

   /**

    * Create some new nodes for each test method.

    */

   public void setUp()

   {

       node1 = new Node<String>("node1");

       node2 = new Node<String>("node2");

       node3 = new Node<String>("node3");

   }





   // ----------------------------------------------------------

   /**

    * tests the join method

      */

     public void testJoin()

     {

      assertEquals(node1.join(node2.join(node3)), node1);

      node3.join(null);

      assertEquals(node3.next(), null);



      Exception thrown = null;

      try

      {

          node1.join(node3);

      }

      catch (Exception e)

      {

          thrown = e;

      }

      assertTrue(thrown instanceof IllegalStateException);

      assertEquals(

          "A node is already following this one.",

          thrown.getMessage());



      try

      {

          node3.join(node2);

      }

      catch (Exception e)

      {

          thrown = e;

      }

      assertTrue(thrown instanceof IllegalStateException);

      assertEquals(

          "A node is already preceding the one passed to this method.",

          thrown.getMessage());



  }





  // ----------------------------------------------------------

  /**

   * tests split method

   */

  public void testSplit()

  {

      node1.join(node2);

      assertEquals(node1.split(), node2);

      assertEquals(node1.next(), null);

      assertEquals(node2.previous(), null);



  }



 }
