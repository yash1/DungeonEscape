import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

// -------------------------------------------------------------------------
/**
 *  Test the Level Class
 *
 *  @author Joe Bruzek, Yash Pant, Marcus Stewart
 *  @version Dec 5, 2013
 */
public class LevelTest
{

    private Level level;

    /**
     * set up a level and put the starting cell right in the center
     */
    @Before
    public void setUp()
    {
        level = new Level(9);
        level.setStart(new Location(4, 4));
    }


    /**
     * Test the east method the current cell should be the farthest east clear
     * cell the top cell in the path should be the current cell the second cell
     * in the path should be the starting position
     */
    @Test
    public void testEast()
    {
        level.east();

        Location test = new Location(7, 4);
        Location test2 = new Location(4, 4);
        assertEquals(test, level.getCurrentLocation());
        level.getPath().tail();
        assertEquals(test, level.getPath().previous());
        assertEquals(test2, level.getPath().previous());
    }


    /**
     * Test the west method the current cell should be the farthest west clear
     * cell the top cell in the path should be the current cell the second cell
     * in the path should be the starting position
     */
    @Test
    public void testWest()
    {
        level.west();

        Location test = new Location(1, 4);
        Location test2 = new Location(4, 4);
        assertEquals(test, level.getCurrentLocation());
        level.getPath().tail();
        assertEquals(test, level.getPath().previous());
        assertEquals(test2, level.getPath().previous());
    }


    /**
     * Test the north method the current cell should be the farthest north clear
     * cell the top cell in the path should be the current cell the second cell
     * in the path should be the starting position
     */
    @Test
    public void testNorth()
    {
        level.north();

        Location test = new Location(4, 1);
        Location test2 = new Location(4, 4);
        assertEquals(test, level.getCurrentLocation());
        level.getPath().tail();
        assertEquals(test, level.getPath().previous());
        assertEquals(test2, level.getPath().previous());
    }


    /**
     * Test the south method the current cell should be the farthest south clear
     * cell the top cell in the path should be the current cell the second cell
     * in the path should be the starting position
     */
    @Test
    public void testSouth()
    {
        level.south();

        Location test = new Location(4, 7);
        Location test2 = new Location(4, 4);
        assertEquals(test, level.getCurrentLocation());
        level.getPath().tail();
        assertEquals(test, level.getPath().previous());
        assertEquals(test2, level.getPath().previous());
    }

}
